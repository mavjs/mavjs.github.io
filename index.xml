<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ye Myat Kaung (Maverick)</title>
    <link>https://mavjs.org/</link>
    <description>Recent content on Ye Myat Kaung (Maverick)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; 2016 Ye Myat Kaung (Maverick)</copyright>
    <lastBuildDate>Fri, 12 Aug 2016 17:21:51 +0200</lastBuildDate>
    <atom:link href="https://mavjs.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>goPwned</title>
      <link>https://mavjs.org/project/goPwned/</link>
      <pubDate>Fri, 12 Aug 2016 17:21:51 +0200</pubDate>
      
      <guid>https://mavjs.org/project/goPwned/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dota2 pro-player API</title>
      <link>https://mavjs.org/project/dota2-api/</link>
      <pubDate>Fri, 12 Aug 2016 17:14:21 +0200</pubDate>
      
      <guid>https://mavjs.org/project/dota2-api/</guid>
      <description></description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://mavjs.org/home/about/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mavjs.org/home/about/</guid>
      <description>

&lt;h1 id=&#34;biography&#34;&gt;Biography&lt;/h1&gt;

&lt;p&gt;Ye Myat Kaung (more commonly known as &lt;strong&gt;Maverick&lt;/strong&gt;) is a highly motivated and
passionate free and open source software (FOSS) advocate. He is interested in software
development, computer system administration and management, digital security and
data privacy. He is also an aspiring hacker and software engineer.&lt;/p&gt;

&lt;p&gt;His passion includes diving into highly technical topics and then helping users
understand those highly technical topics by giving bite-sized digestable examples.
He is also very passionate about continuity of knowledge through sharing and teaching.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Running GUI apps from Fedora Docker containers</title>
      <link>https://mavjs.org/post/running-gui-apps-from-fedora-docker-containers/</link>
      <pubDate>Sun, 10 May 2015 15:50:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/running-gui-apps-from-fedora-docker-containers/</guid>
      <description>&lt;p&gt;After reading &lt;a href=&#34;https://twitter.com/jessfraz&#34;&gt;Jessie Frazelle&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://blog.jessfraz.com/post/docker-containers-on-the-desktop&#34;&gt;Docker Containers on the Desktop&lt;/a&gt; post I was quite interested in making some Fedora image based docker containers for some apps I want to use that I wouldn&amp;rsquo;t normally install on my main machines, like Google Chrome with the Google Talk plugins and flash. So, I did make one with chrome and the talk plugin and followed the guide on Jessie&amp;rsquo;s blog to run the GUI app, it worked, &lt;em&gt;but&lt;/em&gt; there was no sound.&lt;/p&gt;

&lt;p&gt;But of course, I forgot Fedora use PulseAudio, so I looked for a solution on the internet as usual and stumbled upon a stackoverflow question: &lt;a href=&#34;https://stackoverflow.com/questions/28985714/run-apps-using-audio-in-a-docker-container&#34;&gt;qt - run apps using audio in a docker container&lt;/a&gt; and now has a working Fedora docker container which runs Google Chrome with the Google Talk plugin.&lt;/p&gt;

&lt;p&gt;Dockerfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FROM fedora:latest
MAINTAINER &amp;quot;Ye Myat Kaung (Maverick)&amp;quot; &amp;lt;mavjs@mavjs.org&amp;gt;

RUN yum install https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm -y &amp;amp;&amp;amp; \
yum install https://dl.google.com/linux/direct/google-talkplugin_current_x86_64.rpm -y

ENTRYPOINT [ &amp;quot;/usr/bin/google-chrome&amp;quot; ]
CMD [ &amp;quot;--user-data-dir=/data&amp;quot;] 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker command to run container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo docker run -it --rm\
    --net host \
    --cpuset 0 \
    --memory 512mb \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY=unix$DISPLAY \
    -v /dev/snd:/dev/snd --privileged \
    -v /dev/shm:/dev/shm \
    -v /etc/machine-id:/etc/machine-id \
    -v /var/lib/dbus:/var/lib/dbus \
    -v /run/user/`id -u`/pulse/native:/run/user/`id -u`/pulse/native \
    -v ~/.pulse:/home/$dockerUsername/.pulse \
    --name chrome \
    mavjs/chrome
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My Fedora Dockerfiles can be found on my github &amp;amp; docker images on docker registery: &lt;a href=&#34;https://github.com/mavjs/fedora-dockerfiles&#34;&gt;fedora-dockerfiles&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://hub.docker.com&#34;&gt;docker hub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora 21 Workstation HiDPI on retina macbook pro</title>
      <link>https://mavjs.org/post/f21-hidpi-on-retina-macbookpro/</link>
      <pubDate>Mon, 06 Apr 2015 02:10:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/f21-hidpi-on-retina-macbookpro/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been happily using F21 since it&amp;rsquo;s release announcement on &lt;a href=&#34;https://fedoramagazine.org/announcing-fedora-21&#34;&gt;Fedora Magazine&lt;/a&gt;,especially with the support for high resolution displays (HiDPI) since I&amp;rsquo;ve been converted back to using Fedora full time on my retina macbook pro. Although most of the GNOME apps work on my retina display, browsers and third-party apps are still lacking. Web pages&amp;rsquo; fonts seems too tiny and I&amp;rsquo;ve to zoom in on them to see them better all the time.&lt;/p&gt;

&lt;p&gt;But recently I came across a nice resource - &lt;a href=&#34;https://wiki.archlinux.org/index.php/HiDPI&#34;&gt;https://wiki.archlinux.org/index.php/HiDPI&lt;/a&gt; about enabling HiDPI support on various apps. Mostly my main used apps daily are &lt;strong&gt;Firefox&lt;/strong&gt;, &lt;strong&gt;Chromium&lt;/strong&gt; and I&amp;rsquo;ve been trying to use &lt;a href=&#34;https://www.jetbrains.com/pycharm&#34;&gt;pycharm&lt;/a&gt; (&amp;amp; various JetBrains apps) but with HiDPI everything seems so small, so as suggested in the wiki, I changed my settings as follows:&lt;/p&gt;

&lt;p&gt;On Firefox (play around with the value):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;about:config -&amp;gt; layout.css.devPixelsPerPx -&amp;gt; 1.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thunderbird (same as Firefox):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Edit -&amp;gt; Preferences -&amp;gt; Advanced -&amp;gt; Config Editor -&amp;gt; layout.css.devPixelsPerPx -&amp;gt; 1.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PyCharm and any JetBrains products (the file should be in &lt;strong&gt;bin&lt;/strong&gt; sub
directory in the folder you extracted the app):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;appname|appname64&amp;gt;.vmoptions -&amp;gt; -Dhidpi=true
&lt;/code&gt;&lt;/pre&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/CLionBefore.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;CLion before HiDPI tweak&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/CLionAfter.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;CLion after HiDPI tweak&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>World of Warcraft on Fedora 20 via wine</title>
      <link>https://mavjs.org/post/world-of-warcraft-on-f20-via-wine/</link>
      <pubDate>Fri, 14 Nov 2014 14:26:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/world-of-warcraft-on-f20-via-wine/</guid>
      <description>&lt;p&gt;Install wine:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    # sudo yum install wine
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download World of Warcraft Setup Installer from &lt;a href=&#34;https://us.battle.net/account/download/?show=wow&#34;&gt;https://us.battle.net/account/download/?show=wow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run the installer with wine:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    # cd ~/Downloads/
    # wine World-of-Warcraft-Setup-enGB.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the installation completes, it will ask you to login to your Battlenet Account. Instead, quit the application. Then tell it to use software rendered OpenGL by executing (it has a bug where the interface is just black canvas on some intel cards):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    % export LIBGL_ALWAYS_SOFTWARE=1
    % wine ~/.wine/drive_c/Program\ Files\ (x86)/Battle.net/Battle.net\ Launcher.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Battlenet actually allows you to play even though it hasn&amp;rsquo;t finished downloading if it has reached a certain downloaded size. Either wait to finish or open the game. When you run it the first time it will take a while and FPS is not that great. Quit the game. Modify &lt;strong&gt;SET gxApi &amp;ldquo;D3D9&amp;rdquo;&lt;/strong&gt; to &lt;strong&gt;SET gxApi &amp;ldquo;Opengl&amp;rdquo;&lt;/strong&gt; in the following file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    $ ~/.wine/drive_c/Program\ Files\ (x86)/World\ of\ Warcraft/WTF/Config.wtf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that your game should work in decent FPS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have not tried the gameplay yet, since my subscription expired. :-(&lt;/li&gt;
&lt;li&gt;Fedora 20 running on a 13&amp;rdquo;, 2.8Ghz retina macbookpro, 2013 edition.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=30545&#34;&gt;https://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=30545&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.webupd8.org/2014/10/partial-workaround-for-black-distorted.html&#34;&gt;http://www.webupd8.org/2014/10/partial-workaround-for-black-distorted.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Compiling Voxelands on Mac OSX</title>
      <link>https://mavjs.org/post/compiling-voxelands-on-mac-osx/</link>
      <pubDate>Fri, 26 Sep 2014 22:25:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/compiling-voxelands-on-mac-osx/</guid>
      <description>

&lt;h1 id=&#34;what-is-voxelands&#34;&gt;What is Voxelands?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://voxelands.com&#34;&gt;Voxelands&lt;/a&gt; - the Fun-Focused Free Software Voxel World Game. Voxelands is a sandbox construction game based on &lt;a href=&#34;http://minetest.net&#34;&gt;Minetest&lt;/a&gt;, which was inspired by earlier &amp;ldquo;voxel world&amp;rdquo; games such as Infiniminer.&lt;/p&gt;

&lt;p&gt;We already have the precompiled mac app for the latest stable release that you can install at: &lt;a href=&#34;http://voxelands.com/downloads/voxelands-1408.00-osx.dmg&#34;&gt;http://voxelands.com/downloads/voxelands-1408.00-osx.dmg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; The above &lt;strong&gt;voxelands-1408.00-os.dmg&lt;/strong&gt; would still need the mentions dependencies installed from brew below, with the exception of git, cmake, Xcode, Xcode Command Line Tools. This post is mostly meant for people that want the latest new features in the development branch. I&amp;rsquo;m working on a proper mac app that wouldn&amp;rsquo;t need to install dependencies, in the next release.&lt;/p&gt;

&lt;p&gt;To start off with getting a voxelands-1408.00:next-os.dmg (which is the branch for the next release, where most fixes that didn&amp;rsquo;t make it to the latest stable release gets committed to), you&amp;rsquo;d need a few more softwares to help. First off, you need `Homebrew - The missing package manager for OSX &lt;a href=&#34;http://brew.sh&#34;&gt;http://brew.sh&lt;/a&gt;, to install it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After installing brew, you need to install these dependencies (that
are in the brew repositories):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;libpng&lt;/li&gt;
&lt;li&gt;libvorbis&lt;/li&gt;
&lt;li&gt;libogg&lt;/li&gt;
&lt;li&gt;jpeg-turbo&lt;/li&gt;
&lt;li&gt;gettext&lt;/li&gt;
&lt;li&gt;irrlicht&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;cmake&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Issue brew install on all of them&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    brew install libpng libvorbis libogg jpeg-turbo gettext irrlicht git cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That will install the most needed dependencies for Voxelands on Mac OSX. But you will also need the &lt;a href=&#34;http://xquartz.macosforge.org/landing/&#34;&gt;XQuartz&lt;/a&gt; - A version of the X.Org X Window System that runs on Mac OSX, `&lt;a href=&#34;https://developer.apple.com/xcode/downloads&#34;&gt;Xcode&lt;/a&gt;, &lt;a href=&#34;https://developer.apple.com/downloads/index.action&#34;&gt;Command Line Tools for Xcode&lt;/a&gt; and you can start compiling.&lt;/p&gt;

&lt;p&gt;Get the voxelands source from git first (voxelands&amp;rsquo; former name was minetest-classic)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    git clone https://gitorious.org/minetest-classic/minetest-classic.git
    cd minetest-classic
    git checkout next
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s start off with telling &lt;a href=&#34;http://www.cmake.org&#34;&gt;cmake&lt;/a&gt; - which is the cross-platform, open-source build system that Voxelands uses, about the extra dependencies that we installed via brew (do make sure you supply the correct paths with the versions).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    cmake -DIRRLICHT_INCLUDE_DIR=/usr/local/Cellar/irrlicht/1.8.1/include/irrlicht/ \
    -DIRRLICHT_LIBRARY=/usr/local/Cellar/irrlicht/1.8.1/lib/libIrrlicht.a \
    -DJPEG_INCLUDE_DIR=/usr/local/Cellar/jpeg-turbo/1.3.1/include \
    -DJPEG_LIBRARY=/usr/local/Cellar/jpeg-turbo/1.3.1/lib/libturbojpeg.a \
    -DBUILD_SERVER=0 -DRUN_IN_PLACE=0 \
    -DCUSTOM_GETTEXT_PATH=/usr/local/Cellar/gettext/0.19.2/ \
    -DCMAKE_OSX_ARCHITECTURES=x86_64 \-G Xcode .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will make a &lt;strong&gt;voxelands.xcodeproj&lt;/strong&gt; inside the git cloned project directory. Then we can build using Xcode commandline tools.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    xcodebuild -verbose -project voxelands.xcodeproj -target package
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It tells xcodebuild command to build the project with target of package, which makes the .dmg file that we will get in the end, if it successfully compiles.&lt;/p&gt;

&lt;p&gt;If you need help or just want to hang out, come onto our IRC channel &lt;a href=&#34;http://webchat.freenode.net/?channels=%23voxelands&amp;amp;uio=d4&#34;&gt;#voxelands at chat.freenode.net&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATED:&lt;/strong&gt; forgot to add jpeg-turbo as one of the dependencies&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up searx  with gunicorn and supervisor</title>
      <link>https://mavjs.org/post/setting-up-searx-with-gunicorn-and/</link>
      <pubDate>Fri, 19 Sep 2014 21:09:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/setting-up-searx-with-gunicorn-and/</guid>
      <description>

&lt;h2 id=&#34;what-is-searx&#34;&gt;What is searx?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/asciimoo/searx&#34;&gt;searx&lt;/a&gt; is a privacy-respecting, hackable metasearch engine&lt;/p&gt;

&lt;p&gt;I have been using my own instance of searx at &lt;a href=&#34;https://searx.gliderswirley.org/&#34;&gt;https://searx.gliderswirley.org/&lt;/a&gt; mostly because I can. :)&lt;/p&gt;

&lt;p&gt;For some reason, my instance seems to go down at some random time, and I assumed it was uwsgi. :P And also because I wanted to try &lt;a href=&#34;http://gunicorn.org&#34;&gt;gunicorn&lt;/a&gt; and &lt;a href=&#34;http://supervisord.org&#34;&gt;supervisor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of the setup steps are already documented on the wiki at &lt;a href=&#34;https://github.com/asciimoo/searx/wiki/Installation&#34;&gt;https://github.com/asciimoo/searx/wiki/Installation&lt;/a&gt;, but I&amp;rsquo;ll recount the steps here anyways.&lt;/p&gt;

&lt;p&gt;Install packages (extra package: supervisor):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    sudo apt-get install git build-essential libxslt-dev python-dev python-virtualenv python-pybabel zlib1g-dev supervisor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install searx:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    cd /usr/localsudo 
    git clone https://github.com/asciimoo/searx.git
    sudo useradd searx -d /usr/local/searx
    sudo chown searx:searx -R /usr/local/searx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install dependencies in a virtualenv (extra package: gunicorn):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    sudo -u searx -icd /usr/local/searx
    virtualenv searx-ve. 
    ./searx-ve/bin/activate
    pip install -r requirements.txt
    pip install gunicorn
    python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure secretkey:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    sed -i -e &amp;quot;s/ultrasecretkey/`openssl rand -hex 16`/g&amp;quot; searx/settings.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make a configuration file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    sudo touch /etc/supervisor/conf.d/searx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit the above conf to include:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;    [program:searx]
    command=/usr/local/searx/searx-ve/bin/gunicorn searx.webapp:app
    directory=/usr/local/searx/
    user=searx
    group=searx
    autostart=true
    autorestart=true
    stdout_logfile=/var/log/supervisor/%(program_name)s-access.log
    stderr_logfile=/var/log/supervisor/%(program_name)s-error.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then start the supervisor service:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    sudo service supervisor start
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Community-ness in Malaysia at its last breath?</title>
      <link>https://mavjs.org/post/community-ness-in-malaysia-at-its-last/</link>
      <pubDate>Wed, 30 Apr 2014 12:47:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/community-ness-in-malaysia-at-its-last/</guid>
      <description>&lt;p&gt;It has been almost close to 5 years that I have set my foot on the
Malaysian soil. Came over to Malaysia in July, 2009 with the aim of
studying a bachelor, and now that I have completed, the journey in
Malaysia is almost coming to an end in 2 months.&lt;/p&gt;

&lt;p&gt;I have moved around quite a bit, so, it&amp;rsquo;s pretty easy to not give much
thoughts when leaving. But Malaysia is one which I spent the better half
of my teenage years, and the one where I got into free &amp;amp; open source
software (more of the ideology and appreciation, than contributing) and
volunteering at events.&lt;/p&gt;

&lt;p&gt;I have worked/volunteer for/with notable communities in Malaysia in the
span of the last 3 or so years. I even helped grow a community with &lt;a href=&#34;https://twitter.com/@maxthatsme&#34;&gt;Beard-0&lt;/a&gt;, the notable &lt;a href=&#34;https://www.facebook.com/apucsfc&#34;&gt;Cyber Security &amp;amp; Forensics Club of A.P.U&lt;/a&gt;. I helped make Fedora Users&amp;rsquo; and Developers Conference APAC happen in Malaysia, along with &lt;a href=&#34;http://www.kagesenshi.org&#34;&gt;Izhar&lt;/a&gt;, as the main event owner and many other volunteers. And I helped organise a few Fedora events in Kuala Lumpur and at my previous university. Also, me, Beard-0, &lt;a href=&#34;https://twitter.com/naavinm&#34;&gt;naavinm&lt;/a&gt; and &lt;a href=&#34;http://blog.intm.org&#34;&gt;KE&lt;/a&gt; started a Capture The Flag (CTF) team called, (GliderSwirley)[&lt;a href=&#34;http://www.gliderswirley.org&#34;&gt;http://www.gliderswirley.org&lt;/a&gt;]. We still try to play most CTF(s) that we could (please pardon the 0xn00bness, if you see us on CTFTime :P ). I also volunteer at &lt;a href=&#34;http://hitb.org&#34;&gt;Hack In The Box Security Conference&lt;/a&gt; and manage most of &lt;a href=&#34;http://haxpo.nl/hitb2014ams-hackweekday&#34;&gt;HackWEEKDAY&lt;/a&gt; (Hopefully, the sponsors and participants were happy about it).&lt;/p&gt;

&lt;p&gt;Being a part of these communities have been the best extracurricular activities I could ask for. I know there are others like music, martial arts and whatever clubs in the university, but they don&amp;rsquo;t align with my real interests. :P&lt;/p&gt;

&lt;p&gt;The problem(s) I find in the way communities are running (not in any particular order);&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the community leaders are &amp;gt;mid 20s-30s, they have full time jobs,&lt;/li&gt;
&lt;li&gt;needs to be backed by a larger corp&lt;/li&gt;
&lt;li&gt;not much passion for knowledge sharing (they just want to suck us dry :P )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you look at communities like Python Malaysia, Fedora Malaysia and others, the real notable faces of the community have full time jobs. Although, they are pretty active at different events and theirs, there is no other person, especially from college/university students, to take over the leadership or just helping out at organizing events. I try to help most free and open source software (FOSS) communities because look at almost all the software(s) that we use, it&amp;rsquo;s somehow based on FOSS, one way or another.&lt;/p&gt;

&lt;p&gt;I find that college/university students like being a part of communities that are backed by larger corps (I will not name them here, don&amp;rsquo;t want to offend anyone). I can&amp;rsquo;t blame them though, they get good SWAG(s)!! like all the time. I&amp;rsquo;m not exactly sure if every other communities need to start distributing swag(s) just to attract more members? It&amp;rsquo;s something I have not figure out yet. Or is it that there is no monetary rewards involved and students are not motivated because of that? :(&lt;/p&gt;

&lt;p&gt;I have done quite a bit of workshops at CSFC, especially python. Because I find that the programming classes in the uni isn&amp;rsquo;t on par with making students actually want to program and I find that python is easier to teach to/learn for beginners. Also, since a lot of security software(s)/scripts are based on python, I hopped that would kill 2 birds with 1 stone, by helping students learn a (new) programming language as well as be able to extend the security software(s), if they find lacking in features. Obviously, I did not have a full-on course figured out like how most classes are, the workshop(s) are aimed more towards motivating the members to start learning programming language(s) and understand how software(s) work, and are mostly 1session/week. I have only recently found out you could get funding from the Python Software Foundation, but now I have other adventures away from Malaysia. :(&lt;/p&gt;

&lt;p&gt;It so happens that students just want to learn the stuff they learn at workshop, go back home and come back the next time without much thoughts about it. Although, some are really talented/works hard and comes up with questions/errors that I have not come across. Whenever a discussion takes place on a particular problem, not many wants to chime in with their ideas, they like to just keep quiet or agree to it. Not sure if the agreeing part is for the sake of agreeing or they&amp;rsquo;re just afraid to voice out their opinions?&lt;/p&gt;

&lt;p&gt;Also, I guess most students visioned that coming to CSFC means we will teach them which buttons to click on vulnerability/exploit finding software(s) and they can start being 1337 H4x0rs. But the sad reality of life is that being good at something doesn&amp;rsquo;t just come from learning to click buttons and knowing how to use a mouse. I, myself, is not a security professional, there are a ton of knowledge I need to gather too, but I am pretty sure it doesn&amp;rsquo;t always just involve clicking buttons and moving your mouse here and there.&lt;/p&gt;

&lt;p&gt;So, after being a part of various communities in Malaysia for awhile, I have come to believe and decided (after thinking hard about it for the past ~4months, having discussed various times with Beard-0 and having talked to a few folks) that the community-ness in Malaysia is certainly at its last breath, don&amp;rsquo;t want to call it dead though. Maybe some still believes it is still growing strong. But to me, it&amp;rsquo;s at its last breath. I&amp;rsquo;d be lucky to attend/help out a few more community events in June (I know there is one in planning for Fedora Malaysia, if you&amp;rsquo;re interested, please have a look at the &lt;a href=&#34;https://fedoraproject.org/wiki/Ambassadors/MalaysianTeam/Events/Fedora_Malaysia_Planning_Meeting_2014&#34;&gt;agenda&lt;/a&gt;, we&amp;rsquo;re still getting the date/venue sorted)&lt;/p&gt;

&lt;p&gt;Although, my inner voice do hope that someone from the &amp;ldquo;younger/college/university&amp;rdquo; group in the community step-up and rekindle that community-ness fire in Malaysia. But I know that if I ever need to take a vacation in Malaysia and wants to meet the community folks, I can always find the Fedora/Python/Mozilla Malaysia, &lt;a href=&#34;http://codeequality.org&#34;&gt;Code Equality&lt;/a&gt; (they&amp;rsquo;re AWESOME!) and some of the HITB folks. :)&lt;/p&gt;

&lt;p&gt;So long and thanks for all the fish!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Nullcon HackIM 2014] Forensics 2 Writeup</title>
      <link>https://mavjs.org/post/nullcon-hackim-2014-forensics-2-writeup/</link>
      <pubDate>Fri, 31 Jan 2014 09:27:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/nullcon-hackim-2014-forensics-2-writeup/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Points: 200&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description: There was a zip file on the desktop. I can&amp;rsquo;t remember the password for it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We saw a zip file named: &lt;strong&gt;&amp;ldquo;null password.zip&amp;rdquo;&lt;/strong&gt; on the desktop. When
opened, there are 2 files which are encrypted. So it was clear that we
needed to crack the zip.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/nullcon-hackim-2014-forensics-2-writeup_s1600_Selection_271.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;First we looked at some hints from the challenge creator ;)&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/Hint?src=hash&#34;&gt;#Hint&lt;/a&gt; for FOR2 &amp;quot;User was too dumb to store the password in the protected zip file itself&amp;quot;  &lt;a href=&#34;https://twitter.com/hashtag/HackIM?src=hash&#34;&gt;#HackIM&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ForensicChallenge?src=hash&#34;&gt;#ForensicChallenge&lt;/a&gt; &lt;a href=&#34;https://twitter.com/nullcon&#34;&gt;@nullcon&lt;/a&gt; &lt;a href=&#34;https://twitter.com/null0x00&#34;&gt;@null0x00&lt;/a&gt;&lt;/p&gt;&amp;mdash; Prince Komal Boonlia (@boonlia) &lt;a href=&#34;https://twitter.com/boonlia/status/426989036436078592&#34;&gt;January 25, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/Hint?src=hash&#34;&gt;#Hint&lt;/a&gt; for FOR2 &amp;quot;Why would someone put two files if it could have been done with one file&amp;quot;  &lt;a href=&#34;https://twitter.com/hashtag/HackIM?src=hash&#34;&gt;#HackIM&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ForensicChallenge?src=hash&#34;&gt;#ForensicChallenge&lt;/a&gt; &lt;a href=&#34;https://twitter.com/nullcon&#34;&gt;@nullcon&lt;/a&gt; &lt;a href=&#34;https://twitter.com/null0x00&#34;&gt;@null0x00&lt;/a&gt;&lt;/p&gt;&amp;mdash; Prince Komal Boonlia (@boonlia) &lt;a href=&#34;https://twitter.com/boonlia/status/426968851012530176&#34;&gt;January 25, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;So, &lt;a href=&#34;https://twitter.com/Maxthatsme&#34;&gt;Beard-0&lt;/a&gt; looked at a freshly booted VM of the image (since I was lazy + forgot to save the initial snapshot and was already working on another Forensic challenge) and looked at the Temp folder in AppData/Local, there he found a folder name &lt;strong&gt;Rar$DI99.160&lt;/strong&gt; inside which had one of the file &lt;strong&gt;&amp;ldquo;Null final1.pdf&amp;rdquo;&lt;/strong&gt;. From this we looked at known attacks on zip files and found &lt;a href=&#34;https://en.wikipedia.org/wiki/Known-plaintext_attack&#34;&gt;https://en.wikipedia.org/wiki/Known-plaintext_attack&lt;/a&gt;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/nullcon-hackim-2014-forensics-2-writeup_s1600_Selection_272.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;We zipped the &lt;strong&gt;&amp;ldquo;Null final1.pdf&amp;rdquo;&lt;/strong&gt; into a zip. Installed the evaluation edition of Ultimate Zip Cracker - &lt;a href=&#34;http://download.cnet.com/Ultimate-ZIP-Cracker/3000-2092_4-10040839.html&#34;&gt;http://download.cnet.com/Ultimate-ZIP-Cracker/3000-2092_4-10040839.html&lt;/a&gt;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/nullcon-hackim-2014-forensics-2-writeup_s1600_Selection_273.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt; Selected the &amp;ldquo;Plaintext attack&amp;rdquo; recovery method.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/nullcon-hackim-2014-forensics-2-writeup_s1600_Selection_274.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Chose the &amp;ldquo;Null final1.pdf&amp;rdquo; zip file as plaintext file.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/nullcon-hackim-2014-forensics-2-writeup_s1600_Selection_275.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;And finally we had the unzip&amp;rsquo;d archive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Nullcon HackIM 2014] Forensics 5 Writeup</title>
      <link>https://mavjs.org/post/nullcon-hackim-2014-forensics-5-writeup/</link>
      <pubDate>Mon, 27 Jan 2014 15:24:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/nullcon-hackim-2014-forensics-5-writeup/</guid>
      <description>&lt;p&gt;I play security competitions called Capture The Flag (CTF) with a
group called &lt;a href=&#34;http://gliderswirley.org&#34;&gt;Glider Swirley&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Points: 500&lt;/strong&gt;
&lt;strong&gt;Description: The client says that the system was compromise. There was no evidence found for the same. The client claims that some anti-forensics tool was used to remove the evidences. Our investigator agrees to it. Can you find out what was the command that was executed and at what time it was done?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There was a hint for it by one of the organizers.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/Hint?src=hash&#34;&gt;#Hint&lt;/a&gt; for FOR5 &amp;quot;it crashed when it was being cleaned up&amp;quot;  &lt;a href=&#34;https://twitter.com/hashtag/HackIM?src=hash&#34;&gt;#HackIM&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ForensicChallenge?src=hash&#34;&gt;#ForensicChallenge&lt;/a&gt; &lt;a href=&#34;https://twitter.com/nullcon&#34;&gt;@nullcon&lt;/a&gt; &lt;a href=&#34;https://twitter.com/null0x00&#34;&gt;@null0x00&lt;/a&gt;&lt;/p&gt;&amp;mdash; Prince Komal Boonlia (@boonlia) &lt;a href=&#34;https://twitter.com/boonlia/status/427135133129269248&#34;&gt;January 25, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Since all the forensics challenges were based on 1 VM image, it was already known that the image is Windows 7 SP1 x86, thus the profile to use for volatility - &lt;a href=&#34;https://code.google.com/p/volatility/ was&#34;&gt;https://code.google.com/p/volatility/ was&lt;/a&gt; &lt;strong&gt;Win7SP1x86&lt;/strong&gt;. So I acquired the memory dump of the system (MEMORY.DMP)&lt;/p&gt;

&lt;p&gt;As this was the first time we (me &amp;amp; &lt;a href=&#34;https://twitter.com/Maxthatsme&#34;&gt;Beard-0&lt;/a&gt;) had to use volatility, I tried to get familiar with it by looking at the process list. Issued with&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    [nullcon-2014] &amp;gt;&amp;gt;&amp;gt; % vol.py -f MEMORY.DMP --profile=Win7SP1x86 pslist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Showed a few processes. But clearly by that I knew it wasn&amp;rsquo;t show me anything about a command being executed or a process crashing. Beard-0 looked through a few usage of volatility and found &lt;strong&gt;cmdscan&lt;/strong&gt;. So I tried it out.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    [nullcon-2014] &amp;gt;&amp;gt;&amp;gt; % vol.py -f MEMORY.DMP --profile=Win7SP1x86 cmdscan 
    Volatility Foundation Volatility Framework 2.3.1
    **************************************************
    CommandProcess: conhost.exe Pid: 2200
    CommandHistory: 0x292a70 Application: TPAutoConnect.exe Flags: Allocated
    CommandCount: 0 LastAdded: -1 LastDisplayed: -1
    FirstCommand: 0 CommandCountMax: 50
    ProcessHandle: 0x58
    **************************************************
    CommandProcess: conhost.exe Pid: 2996
    CommandHistory: 0x5f04f8 Application: cmd.exe Flags: Allocated, Reset
    CommandCount: 2 LastAdded: 1 LastDisplayed: 1
    FirstCommand: 0 CommandCountMax: 50
    ProcessHandle: 0x58
    Cmd #0 @ 0x5ed400: cd desktop
    Cmd #1 @ 0x5f4730: sdelete -c -z c:
    Cmd #36 @ 0x5c00c4: ^?_?\???\
    Cmd #37 @ 0x5ed108: _?\????
    **************************************************
    CommandProcess: conhost.exe Pid: 2996
    CommandHistory: 0x5f0698 Application: sdelete.exe Flags: Allocated
    CommandCount: 0 LastAdded: -1 LastDisplayed: -1
    FirstCommand: 0 CommandCountMax: 50
    ProcessHandle: 0x50
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So it seems the process we want is &lt;strong&gt;sdelete -c -z c:&lt;/strong&gt;, but the flag format requires, the command and the time. So definitely it seems, we need a screenshot of when the process crashed. Now does volatility have a screenshot feature? Well, since it&amp;rsquo;s so awesome it does.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    [nullcon-2014] &amp;gt;&amp;gt;&amp;gt; % vol.py -f MEMORY.DMP --profile=Win7SP1x86 screenshot --dump-dir shots/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It just needs a directory to dump the screenshots and voila, one of
the screenshots shows up:

&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/nullcon-hackim-2014-forensics-5-writeup_s1600_session_1.WinSta0.Default.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zeromutarts CTF Crypto Challenges</title>
      <link>https://mavjs.org/post/zeromutarts-ctf-crypto-challenges/</link>
      <pubDate>Mon, 27 Jan 2014 15:08:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/zeromutarts-ctf-crypto-challenges/</guid>
      <description>

&lt;h2 id=&#34;the-magic-of-rsa-100&#34;&gt;The magic of rsa (100)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;You were able to hear some whispering on the last crypto party!
*whisper* $d$ is 35181901. Keep it secret or we are doomed!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We were given 2 files for the challenge.&lt;/p&gt;

&lt;h3 id=&#34;1-rsa-py&#34;&gt;1) rsa.py&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    #!/usr/bin/env python
    import sys
    n= 65354147
    e = 13
    d = ??

    f = open( sys.argv[1] , &amp;quot;r&amp;quot; )
        for line in f: 
        line = int(line.strip())
        # you&#39;ll have to insert the decrypt function for each line(number) here!
        #dec = ...
        print chr(dec)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-rsa-txt&#34;&gt;2) rsa.txt&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;    32588732
    56947340
    16730166
    16529146
    17037091
    9958499
    18895626
    49410873
    58063242
    16529146
    18895626
    30273022
    58063242
    30273022
    60194095
    9956852
    58063242
    44337129
    16730166
    5059543
    40999214
    39158796
    5059543
    58063242
    54302449
    9958499
    58063242
    8646641
    16730166
    51307370
    16730166
    57845836
    16730166
    34996934
    32762958
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you read up about &lt;a href=&#34;https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29#Decryption&#34;&gt;RSA decryption&lt;/a&gt; on Wikipedia, it&amp;rsquo;s pretty
simple and straightforward to solve this challenge. You need $C$ =
ciphertext (we got loads of it there in rsa.txt, just need to use one by
one), $d$ = private key exponent (we got that as well), $n$ = modulus for
both private and public keys. Thus, $M \equiv C^{d} \bmod n$&lt;/p&gt;

&lt;p&gt;Here, I used &lt;a href=&#34;https://cloud.sagemath.com&#34;&gt;sagemath&lt;/a&gt; cloud application to solve it as follows. You could actually save the following into a python script and run it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    n = 65354147
    d = 35181901
    ctuple = [32588732,56947340,16730166,16529146,17037091,9958499,18895626,49410873,
    58063242,16529146,18895626,30273022,58063242,30273022,60194095,9956852,58063242,
    44337129,16730166,5059543,40999214,39158796,5059543,58063242,54302449,9958499,5806
    3242,8646641,16730166,51307370,16730166,57845836,16730166,34996934,32762958]
    result = &amp;quot;&amp;quot;

    for i in ctuple:
        lol = pow(i, d, n)
        result += chr(lol)
    print &amp;quot;Result for http://zeromutarts.de/task/rsa_magic : &amp;quot; + result
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rivest-shamir-adleman-250&#34;&gt;rivest-shamir-adleman (250)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;*This one is important, we have no clue how to decrypt the secret message! Can you help us?*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We were given 2 files for this challenge as well.&lt;/p&gt;

&lt;h3 id=&#34;1-rivest-py&#34;&gt;1) rivest.py&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    #!/usr/bin/env python
    import sys
    n= 80646413
    e = 5

    # You&#39;ll have to find the d yourself..
    d = unknown

    f = open( sys.argv[1] , &amp;quot;r&amp;quot; )
    for line in f: 
        line = int(line.strip())
        # you&#39;ll have to insert the decrypt function for each line(number) here!
        #dec = ...
        print chr(dec)

    # might come handy
    def xgcd(a,b):
        &amp;quot;&amp;quot;&amp;quot;Extended GCD:
        Returns (gcd, x, y) where gcd is the greatest common divisor of a and b
        with the sign of b if b is nonzero, and with the sign of a if b is 0.
        The numbers x,y are such that gcd = ax+by.&amp;quot;&amp;quot;&amp;quot;
        prevx, x = 1, 0;  prevy, y = 0, 1
        while b:
            q, r = divmod(a,b)
            x, prevx = prevx - q*x, x
            y, prevy = prevy - q*y, y
            a, b = b, r
        return a, prevx, prevy

    def modinv(a, m):
        &amp;quot;&amp;quot;&amp;quot;Modular multiplicative inverse, i.e. a^-1 = 1 (mod m)&amp;quot;&amp;quot;&amp;quot;
        a, u, v = xgcd(a, m)
        if a &amp;lt;&amp;gt; 1:
            raise Exception(&#39;No inverse: %d (mod %d)&#39; % (a, m))
        return u
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-rivest-txt&#34;&gt;2) rivest.txt&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;    72895864
    15633602
    38820479
    60303684
    7458706
    60299530
    20682371
    54642689
    26066811
    32615038
    35349196
    76400140
    38820479
    56463813
    80491201
    76400140
    35349196
    69567074
    26066811
    76400140
    74270178
    76127647
    76127647
    15633602
    76400140
    60303684
    38820479
    56463813
    60303684
    76400140
    72844764
    76127647
    69302434
    15633602
    80491201
    76400140
    6809712
    26066811
    76400140
    42498798
    60299530
    76127647
    69302434
    80491201
    33234011
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This time we seriously need sagemath to solve it. :) Since we don&amp;rsquo;t know the $d$ to decrypt the messages for this challenge, we first need to
find the $p$ &amp;amp; $q$ to get $d$. The most straightforward way to get that is to
use &lt;a href=&#34;https://en.wikipedia.org/wiki/Fermat%27s_factorization_method&#34;&gt;Fermat&amp;rsquo;s Factorization method&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I used the formula from here: &lt;a href=&#34;http://facthacks.cr.yp.to/fermat.html&#34;&gt;http://facthacks.cr.yp.to/fermat.html&lt;/a&gt; to
get $p$ &amp;amp; $q$.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    n = 80646413
    e = 5
    ctuple = [72895864,15633602,38820479,60303684,7458706,60299530,20682371,54642689,
    26066811,32615038,35349196,76400140,38820479,56463813,80491201,76400140,35349196,
    69567074,26066811,76400140,74270178,76127647,76127647,15633602,76400140,60303684,
    38820479,56463813,60303684,76400140,72844764,76127647,69302434,15633602,80491201,
    76400140,6809712,26066811,76400140,42498798,60299530,76127647,69302434,80491201,
    33234011]
    def fermatfactor(N):
       if N &amp;lt;= 0: return [N]
       if is_even(N): return [2,N/2]
       a = ceil(sqrt(N))
       while not is_square(a^2-N):
         a = a + 1
       b = sqrt(a^2-N)
       return [a - b,a + b]
    p, q = fermatfactor(n)

    phi=(p-1)*(q-1)
    d=pow(e,-1,phi)

    result = &amp;quot;&amp;quot;
    for i in ctuple:
        lol=pow(i,d,n)
        result+=chr(lol)
    print &amp;quot;Result for result http://zeromutarts.de/task/rivest-shamir-adleman : &amp;quot; + result
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Analysis of iWebSpace Android Application</title>
      <link>https://mavjs.org/post/analysis-of-iwebspace-android/</link>
      <pubDate>Thu, 26 Sep 2013 07:41:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/analysis-of-iwebspace-android/</guid>
      <description>&lt;p&gt;If you follow me enough on twitter (&lt;a href=&#34;https://twitter.com/@mavjs&#34;&gt;@mavjs&lt;/a&gt;), read my home page or follows my Fedora Ambassador wiki page, you&amp;rsquo;ll probably know that I study at the &lt;a href=&#34;http://apu.edu.my/&#34;&gt;Asia Pacific University of Technology and Innovation&lt;/a&gt;, Malaysia. This is my account of the n00b analysis done in my free time on the university&amp;rsquo;s android application.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=edu.my.apiit.iWebSpace&#34;&gt;iWebSpace android application&lt;/a&gt; is, as quoted from its non-working Google Play page, &amp;ldquo;The Asia Pacific University APP provides convenient access to important information and to most of our services in your hand&amp;rdquo; - pretty cool and convenient for most students.&lt;/p&gt;

&lt;p&gt;The only thing in my mind was to do an analysis before actually using it and mostly because this is the first time the university&amp;rsquo;s &lt;a href=&#34;http://www.apu.edu.my/cti&#34;&gt;Center of Technology and Innovation (CTI)&lt;/a&gt; - a R&amp;amp;D department, produced a mobile application. They have both an iPhone version and an android version. Since I don&amp;rsquo;t own a Macbook, I couldn&amp;rsquo;t do any analysis on the former version. And android was easier to read as I&amp;rsquo;m more familiar with Java. That being said about the app, let&amp;rsquo;s see my n00b findings.&lt;/p&gt;

&lt;p&gt;1) I acquired the .apk from a friend. (I think it&amp;rsquo;s verion 1.0 and also I don&amp;rsquo;t own an android)
2) Used &lt;a href=&#34;https://code.google.com/p/dex2jar/&#34;&gt;dex2jar&lt;/a&gt; to convert .apk to .jar.
3) Used &lt;a href=&#34;http://jd.benow.ca/&#34;&gt;JD-GUI&lt;/a&gt; to open and read the .jar file.&lt;/p&gt;

&lt;p&gt;First thing on my mind after opening the .jar file with JD-GUI was to see how the application was authentication the students. So, I scrolled through the code and found a Login class. Inside that Login class, it has a doLogin() method that logs you into the system, once you&amp;rsquo;ve your student ID and password supplied. I took a closer look at it and guess what I found?&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_169.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Yup, HTTP. Awesome. No comments there. Let&amp;rsquo;s move along. Assuming, the majority of the students don&amp;rsquo;t care about their student ID and password, this is pretty much fine, I guess. :P&lt;/p&gt;

&lt;p&gt;The app has functions to show the students, their pending/paid fees, attendance, timetable and exam timetables. Pretty cool and convenient, definitely. So, I did further look at those functions. Firstly, let&amp;rsquo;s look at Fee function. The Fee class has an onCreate() function, that sets up the view. Further look at it suggests that, it uses a md5 string + student ID to query the Fee status of a particular student. Have a look.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_170.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;So, I took a closer look at the md5 string. The developers from CTI loves to keep their variable naming short (i, j, k, m, str1, str2). What does &lt;strong&gt;str1&lt;/strong&gt; actually md5-ing?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;int i is getting the YEAR
int j is getting the MONTH
int k is getting the DATE , which is day of the month
int m is getting the HOUR_OF_DAY
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From the above, if you reconstruct the md5 string with the current datetime on my system (26-09-2013 15:00:00), you get the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    md5(26 + 9 + &#39;Student ID&#39; + 2013 + 15) = &amp;quot;1640a3e25cc45123c5e234606aefbeb2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the same for the attendance function. The timetable and exam schedule functions aren&amp;rsquo;t that interesting, so I&amp;rsquo;ll not write about it here. When reported about the above, the only reply was that they will secure the web services. Does that mean they will keep sending the student ID and password over plain HTTP? I&amp;rsquo;ve no idea. :D I looked at the Google Play store page for the app and found that it couldn&amp;rsquo;t be found. What&amp;rsquo;s up?&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_167.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;But the most interesting part about the whole app is the ActiveWebspace class. It seems to register the device using the application to the server so that they can see what&amp;rsquo;s the count of devices using the app and to send push notifications to them. The server is registered with some unique regId, name and email to a web application residing at the following:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_171.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Once I found that URL, the only logical thing for me to do was to go one directory up, and see if I could find anything. And I did. This is what I found;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_164.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;There was no authentication or whatsoever needed to access that, although they&amp;rsquo;ve 403&amp;rsquo;d the service after some hour that I reported about it. The reply they sent me was accordingly;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_166.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Cool story - &amp;ldquo;illustration purpose&amp;rdquo;. But it seems the message box can be used to send push notification from the look of the JavaScript function they were using:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/analysis-of-iwebspace-android_s1600_Selection_165.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Hey, at least this isn&amp;rsquo;t as bad as the iMessage Chat for android where it could possibly &lt;a href=&#34;http://grahamcluley.com/2013/09/imessage-android-trust/&#34;&gt;download malicious&lt;/a&gt; stuff, right? :P
I think I&amp;rsquo;ll probably only use those services via web. Maybe some other day when I&amp;rsquo;m free, I&amp;rsquo;ll try looking at the iPhone version and see what kind of stuff they coded in. XD
On another note, this was all done on a &lt;a href=&#34;https://getfedora.org&#34;&gt;Fedora 19&lt;/a&gt; laptop. Ciao!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Steam fail to start</title>
      <link>https://mavjs.org/post/steam-fail-to-start/</link>
      <pubDate>Sat, 14 Sep 2013 04:43:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/steam-fail-to-start/</guid>
      <description>&lt;p&gt;Last night I was playing some games on Steam and closed it after I finished playing. Then I browsed around the &lt;a href=&#34;https://www.humblebundle.com&#34;&gt;Humble Bundle&lt;/a&gt; and bought the Humble Indie Bundle 9 since I wanted  &lt;a href=&#34;http://www.markoftheninja.com&#34;&gt;Mark of the Ninja&lt;/a&gt;, so to redeem it I switched on Steam. But it wasn&amp;rsquo;t starting up. So, opened it from terminal and got some errors, but those were there since ages and doesn&amp;rsquo;t actually affected the start up last time.&lt;/p&gt;

&lt;p&gt;So, this morning, I was talking to a friend on IRC about it and he mentioned that you could just do&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell-session&#34;&gt;    /usr/bin/steam --reset
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to reinstall and start again..and voilà it was indeed working again. :)&lt;/p&gt;

&lt;p&gt;[Note]: Another friend suggested to restart the router, not sure how effective that would have been though. :P&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zsh Autocomplete Function to change and auto complete directories&#39; name</title>
      <link>https://mavjs.org/post/zsh-autocomplete-function-to-change-and/</link>
      <pubDate>Sat, 27 Oct 2012 05:01:00 +0000</pubDate>
      
      <guid>https://mavjs.org/post/zsh-autocomplete-function-to-change-and/</guid>
      <description>

&lt;p&gt;About some weeks ago, I was trying to find a way to alias my favourite directory (~/Programming/Pythons) in zsh, and it should show me the directories contained inside it. But aliasing doesn&amp;rsquo;t work, except to &lt;code&gt;cd&lt;/code&gt; me to that directory. Or a function can help me get into the directories inside ~/Programming/Pythons but I&amp;rsquo;d have to type out the directories&amp;rsquo; name manually. That wasn&amp;rsquo;t an option either.&lt;/p&gt;

&lt;p&gt;So I turned to &amp;ldquo;Uncle Google&amp;rdquo; :P for it. Also what I remembered from Zsh is that it&amp;rsquo;s auto completion is really awesome. So I searched for &amp;ldquo;zsh autocomplete function&amp;rdquo; and read some stackoverflow examples and stuff. But I had some errors if I was using &lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;oh-my-zsh&lt;/a&gt;&amp;lsquo;s functions.zsh to store/write my zsh auto complete function in it.&lt;/p&gt;

&lt;p&gt;What I did was, instead of writing that auto complete function inside oh-my-zsh&amp;rsquo;s functions.zsh, I wrote it directly inside .zshrc, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;    function prog() { 
        cd ~/Programming/Pythons/$1;
        }

    _prog() {
        _files -W ~/Programming/Pythons;
        }

    compdef _prog prog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What this code actually does is that when you type &lt;code&gt;prog&lt;/code&gt; after sourcing your .zshrc file, it expands the defined directory, in here; &amp;lsquo;~/Programming/Pythons/&amp;rsquo; and the argument $1 is based on whatever directory you selected from the expansion of the directory from the function  &lt;code&gt;_prog()&lt;/code&gt;, like this;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://mavjs.org/img/zsh-autocomplete-function-to-change-and_s1600_Selection_021.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;This exactly did what I needed. If you got awesome auto complete
functions written, do share it at the comments. :)&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://zsh.sourceforge.net/Guide/zshguide06.html&#34;&gt;http://zsh.sourceforge.net/Guide/zshguide06.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/10700012/zsh-autocomplete-function-based-on-2-arguments&#34;&gt;http://stackoverflow.com/questions/10700012/zsh-autocomplete-function-based-on-2-arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Zsh#Command_Completion&#34;&gt;https://wiki.archlinux.org/index.php/Zsh#Command_Completion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>